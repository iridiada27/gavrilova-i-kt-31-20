// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prpr.Database;

#nullable disable

namespace Prpr.Migrations
{
    [DbContext(typeof(Marks))]
    partial class MarksModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Prpr.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("group_id")
                        .HasComment("ID группы");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(Max)")
                        .HasColumnName("c_group_name")
                        .HasComment("Название группы");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("c_year")
                        .HasComment("Год поступления");

                    b.HasKey("GroupId")
                        .HasName("pk_cd_group_group_id");

                    b.ToTable("cd_group", (string)null);
                });

            modelBuilder.Entity("Prpr.Models.Otsenka", b =>
                {
                    b.Property<int>("OtsenkaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("otsenka_id")
                        .HasComment("ID оценки");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OtsenkaId"));

                    b.Property<int>("Mark")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("c_otsenka_mark")
                        .HasComment("Оценка");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("f_student_id")
                        .HasComment("ID студента");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("f_subject_id")
                        .HasComment("ID предмета");

                    b.HasKey("OtsenkaId")
                        .HasName("pk_cd_otsenka_otsenka_id");

                    b.HasIndex(new[] { "StudentId" }, "idx_cd_otsenka_fk_f_student_id");

                    b.HasIndex(new[] { "SubjectId" }, "idx_cd_otsenka_fk_f_subject_id");

                    b.ToTable("cd_otsenka", (string)null);
                });

            modelBuilder.Entity("Prpr.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("student_id")
                        .HasComment("ID студента");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("f_group_id")
                        .HasComment("ID группы");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(Max)")
                        .HasColumnName("c_student_name")
                        .HasComment("Имя");

                    b.Property<string>("Otchestvo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(Max)")
                        .HasColumnName("c_student_otchestvo")
                        .HasComment("Отчество");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(Max)")
                        .HasColumnName("c_student_surname")
                        .HasComment("Фамилия");

                    b.HasKey("StudentId")
                        .HasName("pk_cd_student_student_id");

                    b.HasIndex(new[] { "GroupId" }, "idx_cd_student_fk_f_group_id");

                    b.ToTable("cd_student", (string)null);
                });

            modelBuilder.Entity("Prpr.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("subject_id")
                        .HasComment("ID предмета");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(Max)")
                        .HasColumnName("c_subject_name")
                        .HasComment("Название предмета");

                    b.HasKey("SubjectId")
                        .HasName("pk_cd_subject_subject_id");

                    b.ToTable("cd_subject", (string)null);
                });

            modelBuilder.Entity("Prpr.Models.Otsenka", b =>
                {
                    b.HasOne("Prpr.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_f_student_id");

                    b.HasOne("Prpr.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_f_subject_id");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Prpr.Models.Student", b =>
                {
                    b.HasOne("Prpr.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_group_id");

                    b.Navigation("Group");
                });
#pragma warning restore 612, 618
        }
    }
}
